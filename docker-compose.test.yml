version: '3.8'

services:
  # PostgreSQL Database for Testing
  db:
    build:
      context: ./backend/db
      dockerfile: Dockerfile
    container_name: yudai_db_test
    restart: unless-stopped
    environment:
      - POSTGRES_DB=yudai_db
      - POSTGRES_USER=yudai_user
      - POSTGRES_PASSWORD=yudai_password
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - yudai-test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yudai_user -d yudai_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Backend API Service for Testing
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: yudai_backend_test
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://yudai_user:yudai_password@db:5432/yudai_db
      - DB_ECHO=false
      - PYTHONPATH=/app
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-test_key}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID:-test_client_id}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET:-test_client_secret}
      - GITHUB_REDIRECT_URI=${GITHUB_REDIRECT_URI:-http://localhost:3000/auth/callback}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - yudai-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # Frontend React Service for Testing
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: yudai_frontend_test
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:8000
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - yudai-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # Integration Test Runner
  test-runner:
    image: curlimages/curl:latest
    container_name: yudai_test_runner
    depends_on:
      - frontend
      - backend
      - db
    networks:
      - yudai-test-network
    command: >
      sh -c "
        echo 'Waiting for all services to be ready...' &&
        sleep 30 &&
        echo 'Running integration tests...' &&
        curl -f http://backend:8000/health &&
        curl -f http://frontend:80 &&
        echo 'All integration tests passed!' &&
        exit 0
      "

# Volumes
volumes:
  postgres_test_data:
    driver: local

# Networks  
networks:
  yudai-test-network:
    driver: bridge 