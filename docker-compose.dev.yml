version: '3.8'

services:
  # PostgreSQL Database
  db:
    build:
      context: ./backend/db
      dockerfile: Dockerfile
    container_name: yudai_db_dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=yudai_db
      - POSTGRES_USER=yudai_user
      - POSTGRES_PASSWORD=yudai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - yudai-network-dev

  # Backend API Service (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: yudai_backend_dev
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://yudai_user:yudai_password@db:5432/yudai_db
      - DB_ECHO=true
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - yudai-network-dev
    command: ["python", "-m", "uvicorn", "repo_processor.filedeps:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Frontend React Service (Development)
  frontend:
    image: node:18-alpine
    container_name: yudai_frontend_dev
    restart: unless-stopped
    working_dir: /app
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - yudai-network-dev
    command: sh -c "pnpm install && pnpm run dev --host 0.0.0.0"

# Volumes
volumes:
  postgres_data_dev:
    driver: local

# Networks  
networks:
  yudai-network-dev:
    driver: bridge 